// <auto-generated />
using System;
using MedicalAppointment_API.DataLayer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalAppointment_API.Migrations
{
    [DbContext(typeof(MedicalAppointmentContext))]
    [Migration("20210605134712_BasicDataBaseSetup")]
    partial class BasicDataBaseSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicalAppointment_API.DataLayer.Models.Appointment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("scheduleOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MedicalAppointment_API.DataLayer.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userRoleid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userRoleid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MedicalAppointment_API.DataLayer.Models.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("MedicalAppointment_API.DataLayer.Models.Appointment", b =>
                {
                    b.HasOne("MedicalAppointment_API.DataLayer.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("MedicalAppointment_API.DataLayer.Models.User", b =>
                {
                    b.HasOne("MedicalAppointment_API.DataLayer.Models.UserRole", "userRole")
                        .WithMany()
                        .HasForeignKey("userRoleid");
                });
#pragma warning restore 612, 618
        }
    }
}
